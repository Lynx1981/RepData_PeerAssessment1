a<-available.packages()
head(rownames(a), 3)
utils:::menuInstallPkgs()
source("http://bioconductor.org/biocLite.R")
biocLine()
source("http://bioconductor.org/biocLite.R")
biocLine()
biocLite()
biocLine(c("GenomicFeatures", "AnnotationDbi"))
biocLite(c("GenomicFeatures", "AnnotationDbi"))
find.package("devtools")
q()
find.package("devtools")
utils:::menuInstallPkgs()
library(devtools)
find_rtools()
install.package("KernSmooth")
utils:::menuInstallPkgs()
library(KernSmooth)
q()
getwd()
setClass('myDate')
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y"))
#m <- read.csv("household_power_consumption.txt", sep=";", colClasses=c("myDate", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), header=T, na.strings="?")
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
m <- read.csv(unz(temp, "data1.csv"), sep=";", colClasses=c("myDate", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), header=T, na.strings="?")
unlink(temp)
n <- m[m$Date == "2007-02-01" | m$Date == "2007-02-02"]
n$timestamp <- as.POSIXct(paste(n$Date, n$Time))
Sys.setlocale(category = "LC_ALL", locale = "english")
png(filename = "plot1.png",width = 480, height = 480, units = "px", pointsize = 12)
with(n, hist(Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowats)"))
dev.off()
setClass('myDate')
setAs("character","myDate", function(from) as.Date(from, format="%d/%m/%Y"))
#m <- read.csv("household_power_consumption.txt", sep=";", colClasses=c("myDate", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), header=T, na.strings="?")
temp <- tempfile()
#download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
m <- read.csv(unz(url("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"), "data1.csv"), sep=";", colClasses=c("myDate", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), header=T, na.strings="?")
unlink(temp)
n <- m[m$Date == "2007-02-01" | m$Date == "2007-02-02"]
n$timestamp <- as.POSIXct(paste(n$Date, n$Time))
Sys.setlocale(category = "LC_ALL", locale = "english")
png(filename = "plot1.png",width = 480, height = 480, units = "px", pointsize = 12)
with(n, hist(Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowats)"))
dev.off()
temp <- tempfile()
download("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",dest=temp, mode="wb")
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",dest=temp, mode="wb")
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip")
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip")
m <- read.csv(unz(temp, "household_power_consumption.txt"), sep=";", colClasses=c("myDate", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"), header=T, na.strings="?")
pwd
pwd()
getwd()
setwd("./R/")
getwd()
setwd("./RepData_PeerAssessment1")
getwd()
m <- read.csv(unz("activity.zip", "activity.csv"), colClasses=c("numeric", "date", "numeric"), header=T)
m <- read.csv(unz("activity.zip", "activity.csv"), colClasses=c("numeric", "character", "numeric"), header=T)
head(m)
m$date <- as.POSIXct(m$date)
head(m)
m$interval <- as.factor(m$interval)
m
head(m)
summary(m)
with(m, 
plot(steps ~ date, psc=17)
)
v <- aggregate(m$steps, by=list(date = m$date, interval= m$interval), FUN=sum)
v
plot v
plot(v)
head(v)
hist(v)
n <- m
m <- m[!is.na(m$steps),]
head(m)
v <- aggregate(m$steps, by=list(date = m$date, interval= m$interval), FUN=sum)
hist(v)
head(v)
v$x <- as.numeric(x)
v$x <- as.numeric(v$x)
hist(v)
hist(v$x)
plot(v$x ~ v$date)
v <- aggregate(m$steps, by=list(date = m$date), FUN=sum)
hist(v$x)
plot(v$x ~ v$date)
hist(v$x)
hist(v$x, breaks=v$date)
hist(v$x, add=F)
qplot(x, data = v)
library(ggplot2)
qplot(x, data = v)
qplot(x, data = v) + scale_x_discrete(breaks=1:31)
qplot(x, data = v) + scale_x_discrete(breaks=1:31)
qplot(x, data = v)
hist(v)
hist(v$x)
qplot(x, data = v)
hist(v$date)
qplot(x ~date, data = v)
barplot(v)
barplot(v$x)
barplot(v$x, names.arg = v$date)
barplot(v$x, names.arg = v$date, las=1)
barplot(v$x, names.arg = v$date, las=0)
barplot(v$x, names.arg = v$date, las=2)
barplot(v$x, names.arg = v$date, las=3)
barplot(v$x, names.arg = v$date, las=4)
barplot(v$x, names.arg = v$date, las=1)
barplot(v$x, names.arg = v$date, las=3)
barplot(v$x, names.arg = v$date, las=3, cex=0.7)
barplot(v$x, names.arg = v$date, las=3, cex.axis=0.7)
barplot(v$x, names.arg = v$date, las=3, cex.axis=0.5)
barplot(v$x, names.arg = v$date, las=3, cey.axis=0.5)
barplot(v$x, names.arg = v$date, las=3, cex.lab=0.5)
barplot(v$x, names.arg = v$date, las=3, cex.lab=0.3)
barplot(v$x, names.arg = v$date, las=3, cex.sub=0.5)
barplot(v$x, names.arg = v$date, las=3, cex.axis=0.5)
barplot(v$x, names.arg = v$date, las=3, cex.lab=0.5)
barplot(v$x, names.arg = v$date, las=3)
barplot(v$x, names.arg = v$date, las=3, cex.names=0.5)
z <- aggregate(m$steps, by=list(date = m$date), FUN=average)
z <- aggregate(m$steps, by=list(date = m$date), FUN=mean)
y <- aggregate(m$steps, by=list(date = m$date), FUN=median)
z
y <- aggregate(m$steps, by=list(), FUN=median)
y <- aggregate(m$steps, FUN=median)
avg(m$steps)
mean(m$steps)
median(m$steps)
median()
median
median(m)
median(m$steps, na.rm=T)
m$steps
median(y)
median(y$steps)
head(y)
median(y$x)
y
median(z$x)
mean(z$x)
z <- aggregate(m$steps, by=list(date = m$date), FUN=sum)
mean(z$x)
median(z$x)
median(v$x)
z <- aggregate(m$steps, by=list(date = m$interval), FUN=sum)
head(z)
z <- aggregate(m$steps, by=list(date = m$interval), FUN=mean)
head(z)
barplot(z$x, names.arg = v$interval)
barplot(z$x, names.arg = v$interval, names=TRUE)
barplot(z$x, names.arg = v$interval, cex.axis=1)
plot(z, data=)
with z{
with (z){
with (z,
plot (x~inteval, pch=17)
)
with (z,
plot (x~interval, pch=17)
)
head(z)
names(z) <-c(intervals, steps)
names(z) <-c("interval", "steps")
plot (steps~interval, pch=17)
with(z,
plot (steps~interval, pch=17))
with(z, plot (steps~interval, pch=18, color="blue"))
with(z, plot (steps~interval, pch=21, color="blue"))
with(z, plot (steps~interval, pch="", color="blue"))
with(z, plot (steps~interval, pch=""))
with(z, plot (steps~interval, pch="", color="blue"))
with(z, plot (steps~interval, pch="", color="blue", type="l"))
with(z, plot (steps~interval, type="l"))
with(z, plot (steps~interval, type="n"))
with(z, plot (steps~interval, type="1"))
with(z, lines(steps~interval, type="1"))
with(z, plot (steps~interval, type="l"))
with(z, plot (steps~interval, type="l", pch=""))
lines(z$steps, type="l")
with(z, plot (steps~interval, type="l", pch="31"))
with(z, plot (steps~interval, type="l", pch="21"))
with(z, plot (steps~interval, type="l", pch="21"))
with(z, plot (steps~interval, type="l", pch="1"))
with(z, plot (steps~interval, type="l", pch="1"))
with(z, plot (steps~interval, type="l", pch="19"))
with(z, plot (steps~interval, type="l", pch="19"))
dev.off()
with(z, plot (steps~interval, type="l", pch="19"))
with(z, plot (steps~interval, pch="19"))
with(z, plot (steps~interval, pch=19))
>x <- c(2,1,3,2,5,3.3,1.4);
>y <- c(4,2.7,6,3,8,6,2.2);
x <- c(2,1,3,2,5,3.3,1.4);
y <- c(4,2.7,6,3,8,6,2.2);
plot(x,y)
with(z, plot (steps,interval))
with(z, plot (steps~interval))
with(z, plot (interval, steps))
with(z, plot (interval, steps))
plot(x,y)
plot (x, steps)
plot (x, z$steps)
lines(z$steps, type="l")
with(z, plot (interval, steps))
lines(z$steps, type="l")
with(z, plot (steps ~ interval, las=3))
head(z)
maxint <- z[z$steps == max(z$steps),1]
maxint
max(z$steps)
z$steps == maxint
maxsteps <- max(z$steps)
maxint <- z[z$steps == maxsteps,]
maxint
maxint[1,1]
length(maxint)
nrow(maxint)
maxint$steps
maxint$interval
head(m)
m1
head(n)
nrow(n[!complete.cases(n),])
nrow(n[complete.cases(n),])
nrow(n)
h<-n
h[is.na(h$steps), 1] <- mean(m[m$date=h$date,1])
h[is.na(h$steps), 1] <- m[m$date==h$date,1])
h[is.na(h$steps), 1] <- m[m$date==h$date,1]
h[is.na(h$steps), 1] <- mean(m[m$date==h$date,1])
library(plyr)
na.aggregate(h, by=2, FUN=mean)
setRepositories()
utils:::menuInstallPkgs()
library(zoo)
na.aggregate(h, by=2, FUN=mean)
head(h)
na.aggregate(h, by=2, FUN=mean, na.rm=T)
head(h)
x$steps <- as.numeric(x$steps)
h$steps <- as.numeric(h$steps)
na.aggregate(h, by=2, FUN=mean, na.rm=T)
na.aggregate(h, by=1, FUN=mean, na.rm=T)
na.aggregate(h$steps, by=1, FUN=mean, na.rm=T)
h<-n
na.aggregate(h$steps, by=2, FUN=mean, na.rm=T)
na.aggregate(h$steps, by=3, FUN=mean, na.rm=T)
na.aggregate(h$steps, by=4, FUN=mean, na.rm=T)
na.aggregate(h$steps, by=list(h$date), FUN=mean, na.rm=T)
na.aggregate(h$steps, by=list(h$interval), FUN=mean, na.rm=T)
aggregated <- na.aggregate(h$steps, by=list(h$date), FUN=mean, na.rm=T)
v <- na.aggregate(n$steps, by=list(n$date), FUN=mean, na.rm=T)
v <- aggregate(m$steps, by=list(date = m$date), FUN=sum)
v$x <- as.numeric(v$x)
barplot(v$x, names.arg = v$date, las=3, cex.names=0.5)
median(v$x)
mean(v$x)
%bebe
%%bebe
#bebe
v <- aggregate(m$steps, by=list(date = m$date), FUN=sum)
v$x <- as.numeric(v$x)
barplot(v$x, names.arg = v$date, las=3, cex.names=0.5)
median(v$x)
mean(v$x)
v <- na.aggregate(n$steps, by=list(n$date), FUN=mean, na.rm=T)
v <- aggregate(m$steps, by=list(date = m$date), FUN=sum)
v$x <- as.numeric(v$x)
barplot(v$x, names.arg = v$date, las=3, cex.names=0.5)
median(v$x)
mean(v$x)
v$day <- weekday(v$date)
v$day <- weekdays(v$date)
v$day
v$day <- weekdays(v$date==1)
v$day <- weekdays(v$date)==1
v$day
v$day <- weekdays(v$date)=="sunday"
v$day
Sys.setlocale(category = "LC_ALL", locale = "english")
v$day <- weekdays(v$date)=="sunday"
v$day
v$day <- weekdays(v$date)
v$day <- weekdays(v$date)
v$day
v$day <- weekdays(v$date)=="Sunday" | weekdays(v$date)=="Saturday" 
v$day
v$day <- weekdays(v$date)=="Sunday" | weekdays(v$date)=="Saturday" 
v$day[v$day == T] <- weekend
v$day[v$day == T] <- "weekend"
v$day[v$day == F] <- "weekday"
v$day <- as.factor(v$day)
v$day
v <- na.aggregate(n$steps, by=list(n$date), FUN=mean, na.rm=T)
v$x <- as.numeric(v$x)
barplot(v$x, names.arg = v$date, las=3, cex.names=0.5)
median(v$x)
mean(v$x)n
n
v <- na.aggregate(n$steps, by=list(n$date), FUN=mean, na.rm=T)
v
v <- na.aggregate(n$steps, by=list(n$date), FUN=mean, na.rm=T)
v <- aggregate(v$steps, by=list(date = v$date), FUN=sum)
v<-n
v$steps <- na.aggregate(v$steps, by=list(v$date), FUN=mean, na.rm=T)
v$steps
v$steps <- na.aggregate(v$steps, by=list(v$date), FUN=mean, na.rm=F)
v$steps
v$steps[is.NaN(v$steps)] <- 0
v$steps[is.nan(v$steps)] <- 0
v$steps
v$steps[is.nan(v$steps)] <- 0
v$steps
n$steps
v$steps
v <- aggregate(v$steps, by=list(date = v$date), FUN=sum)
v$x <- as.numeric(v$x)
barplot(v$x, names.arg = v$date, las=3, cex.names=0.5)
median(v$x)
mean(v$x)
b <- aggregate(v$steps, by=list(date = v$date), FUN=sum)
b$x <- as.numeric(b$x)
barplot(b$x, names.arg = b$date, las=3, cex.names=0.5)
median(b$x)
mean(b$x)
Sys.setlocale(category = "LC_ALL", locale = "english")
b$day <- weekdays(b$date)=="Sunday" | weekdays(b$date)=="Saturday"
b$day[b$day == T] <- "weekend"
b$day[b$day == F] <- "weekday"
b$day <- as.factor(b$day)
v
n
v$steps <- na.aggregate(v$steps, by=list(v$date), FUN=mean, na.rm=F)
v$steps <- na.aggregate(v, by=list(v$date), FUN=mean, na.rm=F)
v
v<-n
head(n)
v$steps <- na.aggregate(v$steps, by=list(v$date), FUN=mean, na.rm=F)
head(v)
v$steps[is.nan(v$steps)] <- 0
v
v$steps
b <- aggregate(v$steps, by=list(date = v$date), FUN=sum)
b$x <- as.numeric(b$x)
barplot(b$x, names.arg = b$date, las=3, cex.names=0.5)
median(b$x)
mean(b$x)
b$day <- weekdays(b$date)=="Sunday" | weekdays(b$date)=="Saturday"
b$day[b$day == T] <- "weekend"
b$day[b$day == F] <- "weekday"
b$day <- as.factor(b$day)
b
library(lattice)
xyplot(steps~date | factor(date), data=b, pch=19,
xyplot(steps~date | factor(day), data=b, pch=19,
                main="Weekends vs Weekdays", xlab="Interval",  ylab="Total",layout=c(1,2),type=c("p","g"))
head(b)
xyplot(x~date | factor(day), data=b, pch=19,
                main="Weekends vs Weekdays", xlab="Interval",  ylab="Total",layout=c(1,2),type=c("p","g"))
b$day <- as.factor(b$day)
w <- aggregate(v$steps, by=list(date = v$interval), FUN=sum)
w$x <- as.numeric(w$x)
w$day <- weekdays(w$date)=="Sunday" | weekdays(w$date)=="Saturday"
w$day[w$day == T] <- "weekend"
w$day[w$day == F] <- "weekday"
w$day <- as.factor(w$day)
library(lattice)
xyplot(x~interval | factor(day), data=w, pch=19,
                main="Weekends vs Weekdays", xlab="Interval",  ylab="Total",layout=c(1,2),type=c("p","g"))
w <- aggregate(v$steps, by=list(date = v$interval), FUN=sum)
w
head(w)
names(w) <- c("interval","steps")
w$steps <- as.numeric(w$steps)
w$day <- weekdays(w$date)=="Sunday" | weekdays(w$date)=="Saturday"
w$day[w$day == T] <- "weekend"
w$day[w$day == F] <- "weekday"
w$day <- as.factor(w$day)
w <- v
w$day <- weekdays(w$date)=="Sunday" | weekdays(w$date)=="Saturday"
w$day[w$day == T] <- "weekend"
w$day[w$day == F] <- "weekday"
w$day <- as.factor(w$day)
w<- aggregate(w$steps, by=list(interval = w$interval, day=w$day), FUN=sum)
w$steps <- as.numeric(w$steps)
w
head(w)
w$x <- as.numeric(w$x)
xyplot(x~interval | factor(day), data=w, pch=19,
                main="Weekends vs Weekdays", xlab="Interval",  ylab="Total",layout=c(1,2),type=c("p","g"))
                main="Weekends vs Weekdays", xlab="Interval",  ylab="Total",layout=c(1,2),type="1")
xyplot(x~interval | factor(day), data=w, pch=19,
                main="Weekends vs Weekdays", xlab="Interval",  ylab="Total",layout=c(1,2),type="1")
                main="Weekends vs Weekdays", xlab="Interval",  ylab="Total",layout=c(1,2),type=c("1,1"))
xyplot(x~interval | factor(day), data=w, pch=19,
                main="Weekends vs Weekdays", xlab="Interval",  ylab="Total",layout=c(1,2),type=c("1,1"))
xyplot(x~interval | factor(day), data=w, pch=19,
                main="Weekends vs Weekdays", xlab="Interval",  ylab="Total",layout=c(1,2),type="l")
q()
